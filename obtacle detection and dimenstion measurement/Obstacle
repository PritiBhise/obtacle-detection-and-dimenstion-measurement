#include <LiquidCrystal.h>
LiquidCrystal lcd(5,6,7,8,9,10);
#include <Servo.h>

#define trigpin 2 // digital pin 2
#define echopin 3 // digital pin 3

#define trigpin2 11 // digital pin 2
#define echopin2 12 // digital pin 3


#define M1_1 A0// digital pin 2
#define M1_2 A1 // digital pin 3
#define M2_1 A3// digital pin 2
#define M2_2 A4 // digital pin 3



#define trigpin 2 // digital pin 2
#define echopin 3 // digital pin 3


int samples = 0;   //array to store the samples

 long duration = 0;
 long distance = 0;
 
 long duration2 = 0;
 long distance2 = 0;

Servo myservo;
int pos = 0;

void setup(void)
{
//pinMode(VCC_pin, OUTPUT);
 myservo.attach(4);
pinMode(trigpin, OUTPUT);
pinMode(echopin, INPUT);
pinMode(M1_1, OUTPUT);
pinMode(M1_2, OUTPUT);
pinMode(M2_1, OUTPUT);
pinMode(M2_1, OUTPUT);

pinMode(trigpin2, OUTPUT);
pinMode(echopin2, INPUT);



Serial.begin(9600);   //initialize serial communication at a baud rate of 9600
lcd.begin(16, 2);
//lcd.createChar(1, degree);
lcd.setCursor(0,0);
lcd.print(" Obstacle ");
lcd.setCursor(0,1);
lcd.print(" Avoider ");
digitalWrite(M1_1, LOW);
digitalWrite(M1_2, LOW);
digitalWrite(M2_1, LOW);
digitalWrite(M2_2, LOW);
    delay(10);
delay(2000);
lcd.clear();

lcd.clear();
//  long duration2, distance2;
  digitalWrite(trigpin2, LOW);
  delayMicroseconds(2);
  digitalWrite(trigpin2, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigpin2, LOW);
  duration2 = pulseIn(echopin2, HIGH);
  distance2 = (duration2*0.034)/2;
  lcd.setCursor(0,0);
  lcd.print("D2=");
  lcd.print(distance2);
  lcd.print(" cm");
  delay(1000);

}


/********Motor**************/
void forward()
{
    digitalWrite(A0, HIGH);
    digitalWrite(A1, LOW);
    digitalWrite(A2, HIGH);
    digitalWrite(A3, LOW);
    delay(50);
  }

  void backward()
  {
   
    digitalWrite(M1_1, LOW);
    digitalWrite(M1_2, HIGH);
    digitalWrite(M2_1, LOW);
    digitalWrite(M2_2, HIGH);
    delay(50);
    }

    void left()
    {
     
    digitalWrite(M1_1, HIGH);
    digitalWrite(M1_2, LOW);
    digitalWrite(M2_1, LOW);
    digitalWrite(M2_2, HIGH);
    delay(50);
      }

      void right()
      {
    digitalWrite(M1_1, LOW);
    digitalWrite(M1_2, HIGH);
    digitalWrite(M2_1, HIGH);
    digitalWrite(M2_2, LOW);
    delay(50);
      }

      void Stop()
      {
    digitalWrite(M1_1, LOW);
    digitalWrite(M1_2, LOW);
    digitalWrite(M2_1, LOW);
    digitalWrite(M2_2, LOW);
    delay(50);
      }


/********Loop****************/
void loop(void)
{

  lcd.clear();
  digitalWrite(trigpin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigpin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigpin, LOW);
  duration = pulseIn(echopin, HIGH);//duration
  distance = (duration*0.034)/2;
  lcd.setCursor(0,0);
  lcd.print("D1=");
   lcd.print(distance);
   lcd.print(" cm");
  delay(1000);

    if (distance > 15)
  {  
    forward();
    delay(200);
    }
  else
  {
    Stop();
      lcd.setCursor(0,0);
  lcd.print("Obstacle");
  delay(2000);
     for (pos = 90; pos <= 180; pos += 1)
     {
    myservo.write(pos);              // tell servo to go to position in variable 'pos'
    delay(15);                       // waits 15ms for the servo to reach the position
  }
  lcd.clear();

  digitalWrite(trigpin2, LOW);
  delayMicroseconds(2);
  digitalWrite(trigpin2, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigpin2, LOW);
  duration2 = pulseIn(echopin2, HIGH);
  distance2 = (duration2*0.034)/2;
  lcd.setCursor(0,0);
  lcd.print("D2=");
  lcd.print(distance2);
  lcd.print(" cm");
  delay(1000);
   if (distance2 > 15)
   {
    backward();
    delay(200);
     Stop();
     delay(200);
    right();
    delay(500);
    forward();
    delay(100);
   }
   else
   {
    Stop();
      lcd.setCursor(0,0);
      lcd.print("Obstacle");
      delay(2000);
      for (pos = 180; pos >= 0; pos -= 1)
      { // goes from 180 degrees to 0 degrees
      myservo.write(pos);              // tell servo to go to position in variable 'pos'
      delay(15);                       // waits 15ms for the servo to reach the position
       }
            lcd.clear();
            //long duration2, distance2;
            digitalWrite(trigpin2, LOW);
            delayMicroseconds(2);
            digitalWrite(trigpin2, HIGH);
            delayMicroseconds(10);
            digitalWrite(trigpin2, LOW);
            duration2 = pulseIn(echopin2, HIGH);
            distance2 = (duration2*0.034)/2;
            lcd.setCursor(0,0);
            lcd.print("D2=");
            lcd.print(distance2);
            lcd.print(" cm");
            delay(1000);

                   if (distance2 > 15)
                 {
                   Stop();
                   delay(200);
                  backward();
                  delay(500);
                  left();
                  delay(500);
                  forward();
                  delay(100);
                 }
                 else
                 {
                  Stop();
                  delay(200);
                  backward();
                  delay(500);
                  right();
                  delay(500);
                  forward();
                  delay(100);
                 Stop();
                 delay(1000);
                 }
   
   }
   }


 
  delay(2000);




}